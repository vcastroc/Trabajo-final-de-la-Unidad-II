
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AUM BOOL CHAR CLASS COLON COMMA DIVIDE ELSE EQ EQUALS FLOAT FOR ID IF INT LBRACKET LKEYS LPAREND MAIN MINUS NUMBER PLUS POINTS PRIVATE PUBLIC RBRACKET RETURN RKEYS RPAREND SEMICOLON SHIFT_LEFT STRING STRING1 TIMESstatement : ID SHIFT_LEFT STRING SEMICOLONstatement : FLOAT ID EQUALS expr SEMICOLONstatement : STRING1 ID EQUALS expr SEMICOLONstatement : BOOL ID EQUALS expr SEMICOLONstatement : CHAR ID EQUALS expr SEMICOLONstatement : INT ID EQUALS expr SEMICOLONstatement : CHAR ID LBRACKET NUMBER RBRACKET SEMICOLONstatement : FLOAT ID LBRACKET NUMBER RBRACKET SEMICOLONstatement : BOOL ID LBRACKET NUMBER RBRACKET SEMICOLON\n                            | BOOL ID LBRACKET RBRACKET EQUALS LKEYS val_list RKEYS SEMICOLONval_list : ID\n                            | val_list COMMA IDstatement : STRING1 ID LBRACKET NUMBER RBRACKET SEMICOLON\n                            | STRING1 ID LBRACKET NUMBER RBRACKET EQUALS LKEYS string_list RKEYS SEMICOLONstring_list : STRING\n                            | string_list COMMA STRINGstatement : INT ID LBRACKET NUMBER RBRACKET SEMICOLON\n                            | INT ID LBRACKET RBRACKET SEMICOLON\n                            | INT ID LBRACKET RBRACKET EQUALS LKEYS number_list RKEYS SEMICOLONnumber_list : NUMBER\n                            | number_list COMMA NUMBERexpr : expr MINUS expr\n                        | expr PLUS expr\n                        | expr TIMES expr\n                        | expr DIVIDE expr\n                        | NUMBER\n                        | IDstatement : IF LPAREND ID EQ NUMBER RPAREND LKEYS statement RKEYS ELSE LKEYS statement RKEYSstatement : FOR LPAREND INT ID EQUALS NUMBER SEMICOLON ID COLON NUMBER SEMICOLON ID AUM RPAREND LKEYS statement RKEYSstatement : INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID AUM ID SEMICOLON RKEYS\n                            | INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID TIMES ID SEMICOLON RKEYS\n                            | INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID MINUS ID SEMICOLON RKEYS\n                            | INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID DIVIDE ID SEMICOLON RKEYSstatement : CLASS ID LKEYS PRIVATE POINTS INT ID SEMICOLON PUBLIC POINTS ID LPAREND INT ID RPAREND LKEYS ID EQUALS ID SEMICOLON RKEYS RKEYS SEMICOLON\n                            | CLASS ID LKEYS PRIVATE POINTS INT ID SEMICOLON INT ID SEMICOLON PUBLIC POINTS ID LPAREND INT ID COMMA INT ID RPAREND LKEYS ID EQUALS ID SEMICOLON ID EQUALS ID SEMICOLON RKEYS RKEYS SEMICOLONstatement : INT MAIN LPAREND RPAREND LKEYS statement RETURN NUMBER SEMICOLON RKEYS'
    
_lr_action_items = {'ID':([0,3,4,5,6,7,10,18,22,24,26,28,30,35,52,58,59,60,61,75,87,95,101,103,104,109,127,136,137,138,139,147,148,149,150,153,154,166,174,175,180,181,187,191,193,195,],[2,12,13,14,15,16,20,34,38,38,38,38,38,55,74,38,38,38,38,2,97,105,112,2,115,120,135,141,142,2,144,155,156,157,158,160,161,2,177,178,182,183,189,192,194,196,]),'FLOAT':([0,75,103,138,166,],[3,3,3,3,3,]),'STRING1':([0,75,103,138,166,],[4,4,4,4,4,]),'BOOL':([0,75,103,138,166,],[5,5,5,5,5,]),'CHAR':([0,75,103,138,166,],[6,6,6,6,6,]),'INT':([0,19,32,75,78,91,103,116,138,146,166,167,179,],[7,35,52,7,95,101,7,127,7,154,7,174,181,]),'IF':([0,75,103,138,166,],[8,8,8,8,8,]),'FOR':([0,75,103,138,166,],[9,9,9,9,9,]),'CLASS':([0,75,103,138,166,],[10,10,10,10,10,]),'$end':([1,37,57,63,65,68,70,72,83,84,86,88,89,119,121,129,132,151,169,170,171,172,176,190,200,],[0,-1,-2,-3,-4,-5,-6,-18,-8,-13,-9,-7,-17,-10,-19,-14,-36,-28,-30,-31,-32,-33,-29,-34,-35,]),'SHIFT_LEFT':([2,],[11,]),'MAIN':([7,],[17,]),'LPAREND':([8,9,16,17,141,160,],[18,19,32,33,146,167,]),'STRING':([11,96,118,],[21,107,130,]),'EQUALS':([12,13,14,15,16,46,51,55,64,178,189,194,],[22,24,26,28,30,67,73,77,85,180,191,195,]),'LBRACKET':([12,13,14,15,16,],[23,25,27,29,31,]),'LKEYS':([20,53,67,73,85,93,123,133,159,168,185,],[36,75,87,90,96,103,131,138,166,175,187,]),'SEMICOLON':([21,38,39,40,42,44,47,49,51,62,64,66,69,71,79,80,81,82,94,105,108,110,113,117,134,135,155,156,157,158,182,188,192,196,199,],[37,-27,57,-26,63,65,68,70,72,83,84,86,88,89,-22,-23,-24,-25,104,116,119,121,124,129,139,140,162,163,164,165,184,190,193,197,200,]),'NUMBER':([22,23,24,25,26,27,28,29,30,31,54,58,59,60,61,77,90,102,111,126,],[40,41,40,43,40,45,40,48,40,50,76,40,40,40,40,94,100,113,122,134,]),'RBRACKET':([27,31,41,43,45,48,50,],[46,51,62,64,66,69,71,]),'RPAREND':([33,76,112,152,161,183,],[53,93,123,159,168,185,]),'EQ':([34,],[54,]),'PRIVATE':([36,],[56,]),'RETURN':([37,57,63,65,68,70,72,83,84,86,88,89,92,119,121,129,131,132,151,169,170,171,172,176,190,200,],[-1,-2,-3,-4,-5,-6,-18,-8,-13,-9,-7,-17,102,-10,-19,-14,137,-36,-28,-30,-31,-32,-33,-29,-34,-35,]),'RKEYS':([37,57,63,65,68,70,72,83,84,86,88,89,97,98,99,100,106,107,114,119,120,121,122,124,129,130,132,143,151,162,163,164,165,169,170,171,172,173,176,184,186,190,197,198,200,],[-1,-2,-3,-4,-5,-6,-18,-8,-13,-9,-7,-17,-11,108,110,-20,117,-15,125,-10,-12,-19,-21,132,-14,-16,-36,151,-28,169,170,171,172,-30,-31,-32,-33,176,-29,186,188,-34,198,199,-35,]),'MINUS':([38,39,40,42,44,47,49,79,80,81,82,142,],[-27,58,-26,58,58,58,58,58,58,58,58,149,]),'PLUS':([38,39,40,42,44,47,49,79,80,81,82,],[-27,59,-26,59,59,59,59,59,59,59,59,]),'TIMES':([38,39,40,42,44,47,49,79,80,81,82,142,],[-27,60,-26,60,60,60,60,60,60,60,60,148,]),'DIVIDE':([38,39,40,42,44,47,49,79,80,81,82,142,],[-27,61,-26,61,61,61,61,61,61,61,61,150,]),'POINTS':([56,128,145,],[78,136,153,]),'COMMA':([74,97,98,99,100,106,107,120,122,130,177,],[91,-11,109,111,-20,118,-15,-12,-21,-16,179,]),'COLON':([115,],[126,]),'PUBLIC':([116,140,],[128,145,]),'ELSE':([125,],[133,]),'AUM':([142,144,],[147,152,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,75,103,138,166,],[1,92,114,143,173,]),'expr':([22,24,26,28,30,58,59,60,61,],[39,42,44,47,49,79,80,81,82,]),'val_list':([87,],[98,]),'number_list':([90,],[99,]),'string_list':([96,],[106,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> ID SHIFT_LEFT STRING SEMICOLON','statement',4,'p_statement_cout','views.py',134),
  ('statement -> FLOAT ID EQUALS expr SEMICOLON','statement',5,'p_statement_float_assign','views.py',140),
  ('statement -> STRING1 ID EQUALS expr SEMICOLON','statement',5,'p_statement_string1_assign','views.py',146),
  ('statement -> BOOL ID EQUALS expr SEMICOLON','statement',5,'p_statement_bool_assign','views.py',152),
  ('statement -> CHAR ID EQUALS expr SEMICOLON','statement',5,'p_statement_char_assign','views.py',156),
  ('statement -> INT ID EQUALS expr SEMICOLON','statement',5,'p_statement_int_assign','views.py',160),
  ('statement -> CHAR ID LBRACKET NUMBER RBRACKET SEMICOLON','statement',6,'p_statement_char_array','views.py',165),
  ('statement -> FLOAT ID LBRACKET NUMBER RBRACKET SEMICOLON','statement',6,'p_statement_float_array','views.py',169),
  ('statement -> BOOL ID LBRACKET NUMBER RBRACKET SEMICOLON','statement',6,'p_statement_bool_array','views.py',174),
  ('statement -> BOOL ID LBRACKET RBRACKET EQUALS LKEYS val_list RKEYS SEMICOLON','statement',9,'p_statement_bool_array','views.py',175),
  ('val_list -> ID','val_list',1,'p_val_list','views.py',184),
  ('val_list -> val_list COMMA ID','val_list',3,'p_val_list','views.py',185),
  ('statement -> STRING1 ID LBRACKET NUMBER RBRACKET SEMICOLON','statement',6,'p_statement_string1_array','views.py',192),
  ('statement -> STRING1 ID LBRACKET NUMBER RBRACKET EQUALS LKEYS string_list RKEYS SEMICOLON','statement',10,'p_statement_string1_array','views.py',193),
  ('string_list -> STRING','string_list',1,'p_string_list','views.py',202),
  ('string_list -> string_list COMMA STRING','string_list',3,'p_string_list','views.py',203),
  ('statement -> INT ID LBRACKET NUMBER RBRACKET SEMICOLON','statement',6,'p_statement_int_array','views.py',211),
  ('statement -> INT ID LBRACKET RBRACKET SEMICOLON','statement',5,'p_statement_int_array','views.py',212),
  ('statement -> INT ID LBRACKET RBRACKET EQUALS LKEYS number_list RKEYS SEMICOLON','statement',9,'p_statement_int_array','views.py',213),
  ('number_list -> NUMBER','number_list',1,'p_number_list','views.py',223),
  ('number_list -> number_list COMMA NUMBER','number_list',3,'p_number_list','views.py',224),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','views.py',232),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','views.py',233),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','views.py',234),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','views.py',235),
  ('expr -> NUMBER','expr',1,'p_expr_binop','views.py',236),
  ('expr -> ID','expr',1,'p_expr_binop','views.py',237),
  ('statement -> IF LPAREND ID EQ NUMBER RPAREND LKEYS statement RKEYS ELSE LKEYS statement RKEYS','statement',13,'p_statement_if_else','views.py',244),
  ('statement -> FOR LPAREND INT ID EQUALS NUMBER SEMICOLON ID COLON NUMBER SEMICOLON ID AUM RPAREND LKEYS statement RKEYS','statement',17,'p_statement_for','views.py',248),
  ('statement -> INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID AUM ID SEMICOLON RKEYS','statement',16,'p_statement_function','views.py',252),
  ('statement -> INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID TIMES ID SEMICOLON RKEYS','statement',16,'p_statement_function','views.py',253),
  ('statement -> INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID MINUS ID SEMICOLON RKEYS','statement',16,'p_statement_function','views.py',254),
  ('statement -> INT ID LPAREND INT ID COMMA INT ID RPAREND LKEYS RETURN ID DIVIDE ID SEMICOLON RKEYS','statement',16,'p_statement_function','views.py',255),
  ('statement -> CLASS ID LKEYS PRIVATE POINTS INT ID SEMICOLON PUBLIC POINTS ID LPAREND INT ID RPAREND LKEYS ID EQUALS ID SEMICOLON RKEYS RKEYS SEMICOLON','statement',23,'p_statement_class','views.py',259),
  ('statement -> CLASS ID LKEYS PRIVATE POINTS INT ID SEMICOLON INT ID SEMICOLON PUBLIC POINTS ID LPAREND INT ID COMMA INT ID RPAREND LKEYS ID EQUALS ID SEMICOLON ID EQUALS ID SEMICOLON RKEYS RKEYS SEMICOLON','statement',33,'p_statement_class','views.py',260),
  ('statement -> INT MAIN LPAREND RPAREND LKEYS statement RETURN NUMBER SEMICOLON RKEYS','statement',10,'p_statement_main','views.py',268),
]

